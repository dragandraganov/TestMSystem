@using ManagementSystem.Web.ViewModels
@model ComplexViewModel

@{
    ViewBag.Title = "Create";
}

@{
    var tagMultiSelectValues = new List<SelectListItem>
                                                    {
                                                        new SelectListItem
                                                        {
                                                            Text="All Users",
                                                            Value = int.MinValue.ToString(),
                                                            Selected = true
                                                        }
                                                    };

    tagMultiSelectValues.AddRange(Model
        .AllUsers
        .Select(t => new SelectListItem { Text = t.UserName, Value = t.Id }));
}

@using (Html.BeginForm("Create", "Tasks", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <h4>Create new task</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(t => t.TaskViewModel.RequiredByDate, "Required By Date", new { @class = "col-sm-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(t => t.TaskViewModel.RequiredByDate, new { @class = "form-control form-control-sm datetimepicker", @Value = DateTime.Now })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskViewModel.NextActionDate, "Next Action Date", new { @class = "col-sm-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(t => t.TaskViewModel.NextActionDate, new { @class = "form-control form-control-sm datetimepicker" })
            <em>(optional)</em>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskViewModel.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(t => t.TaskViewModel.Description, new { @class = "form-control form-control-sm", @rows = "5" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskViewModel.Status, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EnumDropDownListFor(t => t.TaskViewModel.Status, new { @class = "form-control form-control-sm" })
            <em>(if the task begins immediately change of 'Оngoing')</em>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.TaskViewModel.Type, new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.EnumDropDownListFor(t => t.TaskViewModel.Type, new { @class = "form-control form-control-sm" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(t => t.AllUsers, "Assign task to users", new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.ListBoxFor(t => t.SelectedUsersId, tagMultiSelectValues, new { @class = "form-control form-control-sm" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-info" value="Save task" />
            <a href="/Tasks/Index" class="btn btn-primary">Cancel</a>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
}


